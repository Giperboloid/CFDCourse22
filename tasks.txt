=== Лекция 2
Был запрограммирован метод конечных объемов для одномерного уравнения вида
 -d( K(x) * du(x)/dx )/dx + u(x) = F(x) 
с г.у. первого рода (fvm1.m)

Задания:
1. Переписать этот метод на удобном для вас языке. Желательно не слово в слово, а посмотреть в целом и попробовать повторить.
   Не забывайте, что в octave нумерация массивов с единицы.
   Описание работы с матрицами с помощью amgcl в c++ лежит в instructions/SparseMatrix-cpp.txt

2. Прогнать решатель при
   K(x) = 1/((2*S)^2*(x+H))
   F(x) = (x+H+1)*sin(S*(x+H)^2)
   с точным решением в виде
   u(x) = sin(S*(x+H)^2)
   
   Константы S, H выбрать произвольно. Например, H = 0.2, S = 10.

3. Построить график Norm(Nelem), где
   Norm - какая то норма отклонения полученного численного решения от точного.
   Nelem - количество конечных объёмов

4. Провести профилирование программы (используя заметное для производительности кол-во элементов):
   Посмотреть, какие участки кода занимают больше всего времени исполнения (Для с++: профилировать в Release`e)
   Подумать о том, как это можно было бы написать более оптимально

=== Лекция 3
В одномерном конечнообъёмном решателе (fvm1.m):
	реализована сборка матрицы жёсткости в цикле по граням
	использованы аппроксимированные на сетке значения функций K(x), F(x)
	Добавлена норма, считающая отклонение от точного решения в рамках аппроксимации
	Оптимизирована работа функции unumer(x) определяющее значение расчитанной функции в точке
Реализован двумерный конечнообъёмный решатель (fvm2.m) с г.у. первого рода.

Доп. замечания
- Ошибка, из-за которой не работала программа, была связана с тем, что я не умножил на площадь грани и косинус угла при сборке жесткости.
  Обратите на это внимание.

- В связи с переходом на неструктурированные сетки я переопределил норму в рамках аппроксимации через интреграл
  N2A = sqrt( 1/|D| * integral[(F - F_exact)^2]dD ) = sqrt( 1/|D| * sum [(F_i - F_exact_i)^2 * Volume_i] )
  Забыл об этом сказать.

- Как строить неструктурированную сетку в простой области в gmsh описано в соответствующем файле в папке instructions

- В папке grid_examples лежат примеры простых сеток в форматах *.m и *.vtk (+данные).

Задания:
1. Использовать двумерный решатель для решения уравнения
   -d( K(x, y) * du(x, y)/dx )/dx + -d( K(x, y) * du(x, y)/dy )/dy + u(x, y) = F(x, y) 

   K(x, y)=1/(8*S^2*(x+y+H))
   F(x, y)=(x+y+H+1)*u(x, y)

   с точным решением в виде
   u(x, y)=sin(S*(x+y+H)^2)
   
   Константы S, H выбрать произвольно. Например, H = 0.1, S = 5.

   Использовать неструктурированную сетку с переменным кол-вом элементов.
   Визуализировать решение.
   Построить зависимость нормы (в рамках аппроксимации) от кол-ва элементов N2(Nelem)
   Сравнить нормы для случая треугольной сетки и 4х угольной, полученной через Recombine.

2. Ускорить алгоритм find_elem(x) в fvm1.m

3. Программа fvm2.m в том виде, в котором она написана сейчас никак не зависит от размерности задача (1D, 2D, 3D).
   Размерность используется только для алгоритмов построения сеточных таблиц и размеров в структуру grid.
   Сейчас есть реализация для 2D (в файлах grid2utils.m, impl_grid2utils.m).
   Нужно написать аналогичные процедуры для одномерной сетки (grid1utils.m).
   Чтобы используя сетку, построенную из grid1utils.m и файл fvm2.m (без изменений в фазе решения) решить одномерную задачу.

4(*) Подумать, как можно было бы ускорить поиск элемента в 2D (_gu_find_element из impl_grid2utils.m). Писать не обязательно.

5(*) Пункт 3 для 3D. Хотя бы для тетраэдров. 3D Сетку можно строить в том же gmsh.


=== Лекция 4
Рассмотрен метод конечных элементов в применении к одномерной задаче. 
	Поэлементная сборка (fem1_elembased.m), объектно-ориентированный подход (fem1.m)
	Введен линейный одномерный элемент (D1Lin.m)
Рассмотрен метод конечных элементов в применении к двумерной задаче (fem2.m)
	Введен билинейный прямоугольный элемент (D2Lin_Rect.m) для структурированных сеток.

Задания:
1. Использовать двумерный конечноэлементный решатель для решения уравнения
   -d( K(x, y) * du(x, y)/dx )/dx + -d( K(x, y) * du(x, y)/dy )/dy + u(x, y) = F(x, y) 

   K(x, y)=1/(8*S^2*(x+y+H))
   F(x, y)=(x+y+H+1)*u(x, y)

   с точным решением в виде
   u(x, y)=sin(S*(x+y+H)^2)

   Визуализировать решение. Посчитать нормы. Найти порядок аппроксимации.

2. По аналогии с прямоугольным элементом ввести треуольный линейный конечный элемент.
За представление в параметрической плоскости принять треугольник [0, 0] -> [1, 0] -> [0, 1]
в качестве локальный базисных функций:
	phi1(xi, eta) = 1-xi-eta
	phi2(xi, eta) = xi
	phi3(xi, eta) = eta
Решить задачу с предыдущего пункта на треугольной сетке.
